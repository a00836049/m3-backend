name: Deploy Backend to Azure App Service

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Debug directory structure
        run: |
          pwd
          ls -la
          echo "Checking for backend directory..."
          if [ -d "backend" ]; then
            echo "Backend directory found"
            cd backend
            pwd
            ls -la
          else
            echo "No backend directory, assuming we're in backend already"
            ls -la
          fi
          
      - name: Navigate to backend and clean
        run: |
          if [ -d "backend" ]; then
            cd backend
          fi
          rm -rf node_modules
          rm -rf dist
          rm -rf build
          
      - name: Clean App Service (Linux)
        run: |
          curl -X POST "https://${{ secrets.AZURE_WEBAPP_BACKEND_NAME }}.scm.azurewebsites.net/api/command" \
          -u "${{ secrets.AZURE_WEBAPP_BACKEND_PUBLISH_PROFILE_SOLUSERPWD }}" \
          -H "Content-Type: application/json" \
          --data '{"command": "rm -rf /site/wwwroot/*"}' || echo "Clean failed, continuing..."
        continue-on-error: true
          
      - name: Inject .env from GitHub secrets
        run: |
          if [ -d "backend" ]; then
            cd backend
          fi
          echo "DB_SERVER=${{ secrets.DB_SERVER }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_ENCRYPT=${{ secrets.DB_ENCRYPT }}" >> .env
          echo "PORT=8080" >> .env
          echo "WEBSITE_NODE_DEFAULT_VERSION=18" >> .env
          echo "ALLOWED_ORIGINS=${{ secrets.ALLOWED_ORIGINS }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "NODE_ENV=production" >> .env
          echo "HOST=0.0.0.0" >> .env

      - name: Create web.config for Azure
        run: |
          if [ -d "backend" ]; then
            cd backend
          fi
          echo '<?xml version="1.0" encoding="utf-8"?>' > web.config
          echo '<configuration>' >> web.config
          echo '  <system.webServer>' >> web.config
          echo '    <handlers>' >> web.config
          echo '      <add name="iisnode" path="server.js" verb="*" modules="iisnode" />' >> web.config
          echo '    </handlers>' >> web.config
          echo '    <rewrite>' >> web.config
          echo '      <rules>' >> web.config
          echo '        <rule name="DynamicContent">' >> web.config
          echo '          <conditions>' >> web.config
          echo '            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True" />' >> web.config
          echo '          </conditions>' >> web.config
          echo '          <action type="Rewrite" url="server.js" />' >> web.config
          echo '        </rule>' >> web.config
          echo '      </rules>' >> web.config
          echo '    </rewrite>' >> web.config
          echo '    <iisnode node_env="production" />' >> web.config
          echo '  </system.webServer>' >> web.config
          echo '</configuration>' >> web.config

      - name: Install dependencies
        run: |
          if [ -d "backend" ]; then
            cd backend
          fi
          npm ci

      - name: Run tests
        run: |
          if [ -d "backend" ]; then
            cd backend
          fi
          npm run test
        continue-on-error: true

      - name: Lint
        run: |
          if [ -d "backend" ]; then
            cd backend
          fi
          npm run lint || echo "Lint failed"
        continue-on-error: true

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_BACKEND_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_BACKEND_PUBLISH_PROFILE }}
          package: ${{ github.workspace }}/backend